{
  "html": "<p>Installing Tweed could not be simpler. All you need is an up to date version of\n<a target=\"_blank\" href=\"https://nodejs.org/en/download\" title=\"Download NodeJS\">Node</a>. Since Tweed is a library rather than a framework, you don&#39;t <em>need</em> to use\nany boilerplate project or to generate a project with the CLI. Just install Tweed in your\nproject and start using it.</p>\n<pre><code class=\"lang-shell\"><span class=\"shell-prompt\"></span><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save tweed</code></pre><blockquote>\n<p><strong>Note:</strong> If you&#39;re looking for the simplest possible way to get started, check out the\n<a href=\"#/docs/getting-started/cli\" title=\"Tweed CLI\">CLI</a> straight away.</p>\n</blockquote>\n<h3 id=\"installing-a-compiler\">Installing a Compiler</h3>\n<p>Tweed focuses on being native, and utilizing new features of the ECMAScript specification,\nlike classes. Classes are simply syntactic sugar over manually creating a constructor\nfunction and populating its prototype with methods. Nothing stops you from using ES5 code\nto use Tweed directly in the browser:</p>\n<pre><code class=\"lang-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>node_modules/tweed/tweed.min.js<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span>\n  function Counter () {\n    this.count = 0\n  }\n\n  Tweed.mutating(Counter.prototype, 'count')\n\n  Counter.prototype.render = function () {\n    var that = this\n    var attributes = {\n      on: {\n        click: function () { that.count++ }\n      }\n    }\n\n    return Tweed.Node('button', attributes,\n      'You have pressed this button ', this.count, ' times'\n    )\n  }\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><p>However, it is probably nicer for you to use a compiler that understands the syntax of\nmodern JavaScript or TypeScript.</p>\n<p>To compile JavaScript, Tweed uses <a href=\"http://babeljs.io\" title=\"Babel is a JavaScript compiler\">Babel</a>. <a href=\"https://www.typescriptlang.org\" title=\"TypeScript â€“ JavaScript that scales\">TypeScript</a> comes with a\nfull featured compiler. Both of them need to be configured, though. So Tweed provides two\npackages that contain the base configurations that make the Tweed syntax work.</p>\n<h4 id=\"using-babel\">Using Babel</h4>\n<p>To use Babel, here&#39;s all you have to do:</p>\n<pre><code class=\"lang-shell\"><span class=\"shell-prompt\"></span><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --dev tweed-babel-config\n<span class=\"shell-prompt\"></span><span class=\"token keyword\">echo</span> <span class=\"token string\">'{ \"extends\": \"tweed-babel-config/config.json\" }'</span> <span class=\"token operator\">></span> .babelrc</code></pre><p>Then, you can use the Babel CLI or the Webpack Babel Loader, or any other way of running\nBabel. We&#39;ll get to that later in this series.</p>\n<h4 id=\"using-typescript\">Using TypeScript</h4>\n<p>To use TypeScript is just as easy:</p>\n<pre><code class=\"lang-shell\"><span class=\"shell-prompt\"></span><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --dev tweed-typescript-config\n<span class=\"shell-prompt\"></span><span class=\"token keyword\">echo</span> <span class=\"token string\">'{ \"extends\": \"./node_modules/tweed-typescript-config/config.json\" }'</span> <span class=\"token operator\">></span> tsconfig.json</code></pre><p>Then you can use <code>tsc</code> or the Webpack TypeScript Loader, or any other way of running the\nTypeScript compiler. We&#39;ll get to that later as well.</p>\n<hr>\n<p>As you can see, it&#39;s easy to set up Tweed yourself. But if you&#39;re looking for the quickest\npossible way to get up and running, you might want to check out the CLI.</p>\n",
  "examples": []
}